package com.idenchev.malware;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class FileMalwareParser implements MalwareParser {
    InputStream scanFileStream;
    LineParser lineParser;

    public FileMalwareParser(InputStream scanFileStream, LineParser lineParser) {
        this.scanFileStream = scanFileStream;
        this.lineParser = lineParser;
    }

    @Override
    public Set<InfectedUser> parseInfectedUsers() {
        Map<String, InfectedUser> infectedUsers = new HashMap<>();
        parseFile(infectedUsers);
        return new HashSet<>(infectedUsers.values());
    }

    private void parseFile(Map<String, InfectedUser> infectedUsers) {
        try (BufferedReader scanFileReader = new BufferedReader(new InputStreamReader(scanFileStream))) {
            String line;
            while ((line = scanFileReader.readLine()) != null) {
                parseLine(line, infectedUsers);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private void parseLine(String line, Map<String, InfectedUser> infectedUsers) {
        lineParser.parseLine(line);
        if (lineParser.lineIsValid()) {
            String username = lineParser.getUsername();
            InfectedUser infectedUser = infectedUsers.get(username);
            if (infectedUser == null) {
                infectedUser = new InfectedUser(username);
                infectedUsers.put(username, infectedUser);
            }
            infectedUser.addFile(lineParser.getInfectedFile());
        }
    }
}
